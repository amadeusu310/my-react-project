{"ast":null,"code":"var _jsxFileName = \"C:\\\\KADAI2,frontend\\\\react-project\\\\my-project\\\\src\\\\App.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { createBrowserRouter, RouterProvider } from \"react-router-dom\";\nimport SearchPage from \"./components/SearchPage\";\nimport NewPostPage from \"./components/NewPostPage\";\nimport { useEffect } from \"react\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n  const [cards, setCards] = useState([]);\n  useEffect(() => {\n    const fetchData = async () => {\n      const response = await fetch('http://rails_web_test:3000/cards');\n      const data = await response.json();\n      setCards(data);\n    };\n    fetchData();\n  }, []);\n  const router = createBrowserRouter([{\n    path: \"/\",\n    element: /*#__PURE__*/_jsxDEV(SearchPage, {\n      cards: cards,\n      setCards: setCards\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 27\n    }, this)\n  }, {\n    path: \"/new-post\",\n    element: /*#__PURE__*/_jsxDEV(NewPostPage, {\n      cards: cards,\n      setCards: setCards\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 35\n    }, this)\n  }]);\n  return /*#__PURE__*/_jsxDEV(RouterProvider, {\n    router: router\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"M51NroWgc5aUEHiqsZiaQ+7WeWA=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","createBrowserRouter","RouterProvider","SearchPage","NewPostPage","useEffect","useState","jsxDEV","_jsxDEV","App","_s","cards","setCards","fetchData","response","fetch","data","json","router","path","element","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/KADAI2,frontend/react-project/my-project/src/App.tsx"],"sourcesContent":["import React from 'react';\nimport { createBrowserRouter,RouterProvider} from \"react-router-dom\";\nimport SearchPage from \"./components/SearchPage\";\nimport NewPostPage from \"./components/NewPostPage\";\nimport { useEffect } from \"react\";\n\n\nimport {useState} from \"react\";\n\nexport type Card = {\n  name: string;\n  category: string;\n  money: string;\n};\n\nexport default function App() {\n  const [cards, setCards] = useState<Card[]>([]);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const response:Response = await fetch('http://rails_web_test:3000/cards');\n      const data = await response.json();\n      setCards(data)\n    }\n    fetchData();\n\n  },[])\n\n  const router = createBrowserRouter([\n    { path: \"/\", element: <SearchPage cards={cards} setCards={setCards}/> },\n    { path: \"/new-post\", element: <NewPostPage cards={cards} setCards={setCards}/> }\n  ]);\n\n  \n\n  return (\n\n    <RouterProvider router={router} />\n  );\n}\n "],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,mBAAmB,EAACC,cAAc,QAAO,kBAAkB;AACpE,OAAOC,UAAU,MAAM,yBAAyB;AAChD,OAAOC,WAAW,MAAM,0BAA0B;AAClD,SAASC,SAAS,QAAQ,OAAO;AAGjC,SAAQC,QAAQ,QAAO,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAQ/B,eAAe,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAC5B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAAS,EAAE,CAAC;EAE9CD,SAAS,CAAC,MAAM;IACd,MAAMQ,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,MAAMC,QAAiB,GAAG,MAAMC,KAAK,CAAC,kCAAkC,CAAC;MACzE,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;MAClCL,QAAQ,CAACI,IAAI,CAAC;IAChB,CAAC;IACDH,SAAS,CAAC,CAAC;EAEb,CAAC,EAAC,EAAE,CAAC;EAEL,MAAMK,MAAM,GAAGjB,mBAAmB,CAAC,CACjC;IAAEkB,IAAI,EAAE,GAAG;IAAEC,OAAO,eAAEZ,OAAA,CAACL,UAAU;MAACQ,KAAK,EAAEA,KAAM;MAACC,QAAQ,EAAEA;IAAS;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC;EAAE,CAAC,EACvE;IAAEL,IAAI,EAAE,WAAW;IAAEC,OAAO,eAAEZ,OAAA,CAACJ,WAAW;MAACO,KAAK,EAAEA,KAAM;MAACC,QAAQ,EAAEA;IAAS;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC;EAAE,CAAC,CACjF,CAAC;EAIF,oBAEEhB,OAAA,CAACN,cAAc;IAACgB,MAAM,EAAEA;EAAO;IAAAG,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAEtC;AAACd,EAAA,CAxBuBD,GAAG;AAAAgB,EAAA,GAAHhB,GAAG;AAAA,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}