{"ast":null,"code":"var _jsxFileName = \"C:\\\\KADAI2,frontend\\\\react-project\\\\my-project\\\\src\\\\CardsContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CardsContext = /*#__PURE__*/createContext(undefined);\nexport const useCards = () => {\n  _s();\n  const context = useContext(CardsContext);\n  if (!context) throw new Error(\"useCards must be used within CardsProvider\");\n  return context;\n};\n_s(useCards, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const CardsProvider = ({\n  children\n}) => {\n  _s2();\n  const [cards, setCards] = useState([]);\n  useEffect(() => {\n    const fetchData = async () => {\n      const response = await fetch(\"http://localhost:3005/cards\");\n      const data = await response.json();\n      setCards(data);\n    };\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(CardsContext.Provider, {\n    value: {\n      cards,\n      setCards\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_s2(CardsProvider, \"M51NroWgc5aUEHiqsZiaQ+7WeWA=\");\n_c = CardsProvider;\nvar _c;\n$RefreshReg$(_c, \"CardsProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","jsxDEV","_jsxDEV","CardsContext","undefined","useCards","_s","context","Error","CardsProvider","children","_s2","cards","setCards","fetchData","response","fetch","data","json","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/KADAI2,frontend/react-project/my-project/src/CardsContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from \"react\";\r\nimport { Card } from \"./App\";\r\n\r\ntype CardsContextType = {\r\n  cards: Card[];\r\n  setCards: React.Dispatch<React.SetStateAction<Card[]>>;\r\n};\r\n\r\nconst CardsContext = createContext<CardsContextType | undefined>(undefined);\r\n\r\nexport const useCards = () => {\r\n  const context = useContext(CardsContext);\r\n  if (!context) throw new Error(\"useCards must be used within CardsProvider\");\r\n  return context;\r\n};\r\n\r\nexport const CardsProvider: React.FC<{ children: React.ReactNode }> = ({ children }) => {\r\n  const [cards, setCards] = useState<Card[]>([]);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const response: Response = await fetch(\"http://localhost:3005/cards\");\r\n      const data = await response.json();\r\n      setCards(data);\r\n    };\r\n    fetchData();\r\n  }, []);\r\n\r\n  return (\r\n    <CardsContext.Provider value={{ cards, setCards }}>\r\n      {children}\r\n    </CardsContext.Provider>\r\n  );\r\n};"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAQ9E,MAAMC,YAAY,gBAAGN,aAAa,CAA+BO,SAAS,CAAC;AAE3E,OAAO,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC5B,MAAMC,OAAO,GAAGT,UAAU,CAACK,YAAY,CAAC;EACxC,IAAI,CAACI,OAAO,EAAE,MAAM,IAAIC,KAAK,CAAC,4CAA4C,CAAC;EAC3E,OAAOD,OAAO;AAChB,CAAC;AAACD,EAAA,CAJWD,QAAQ;AAMrB,OAAO,MAAMI,aAAsD,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,GAAA;EACtF,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGd,QAAQ,CAAS,EAAE,CAAC;EAE9CC,SAAS,CAAC,MAAM;IACd,MAAMc,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,MAAMC,QAAkB,GAAG,MAAMC,KAAK,CAAC,6BAA6B,CAAC;MACrE,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;MAClCL,QAAQ,CAACI,IAAI,CAAC;IAChB,CAAC;IACDH,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEZ,OAAA,CAACC,YAAY,CAACgB,QAAQ;IAACC,KAAK,EAAE;MAAER,KAAK;MAAEC;IAAS,CAAE;IAAAH,QAAA,EAC/CA;EAAQ;IAAAW,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACY,CAAC;AAE5B,CAAC;AAACb,GAAA,CAjBWF,aAAsD;AAAAgB,EAAA,GAAtDhB,aAAsD;AAAA,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}